-- DEPARTMENTS (flyweight)
CREATE TABLE IF NOT EXISTS departments (
  id           BIGINT AUTO_INCREMENT PRIMARY KEY,
  code         VARCHAR(32) NOT NULL UNIQUE,   -- e.g. CARDIO
  name         VARCHAR(128) NOT NULL
);

-- USERS + ROLES (RBAC)
CREATE TABLE IF NOT EXISTS users (
  id           BIGINT AUTO_INCREMENT PRIMARY KEY,
  username     VARCHAR(64)  NOT NULL UNIQUE,
  password_hash VARCHAR(255) NOT NULL,         -- PBKDF2/BCrypt/Argon2
  salt         VARCHAR(64)  NOT NULL,
  full_name    VARCHAR(128) NOT NULL,
  national_id  VARCHAR(32)  NOT NULL,
  email        VARCHAR(128) NOT NULL,
  phone        VARCHAR(32)  NOT NULL,
  created_at   TIMESTAMP     DEFAULT CURRENT_TIMESTAMP,
  updated_at   TIMESTAMP     DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS roles (
  id           BIGINT AUTO_INCREMENT PRIMARY KEY,
  name         VARCHAR(32) NOT NULL UNIQUE -- ADMIN, DOCTOR, PATIENT
);

CREATE TABLE IF NOT EXISTS user_roles (
  user_id      BIGINT NOT NULL,
  role_id      BIGINT NOT NULL,
  PRIMARY KEY (user_id, role_id),
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE
);

-- DOCTORS, PATIENTS (User ile gevşek ilişki: one-to-one opsiyonel)
CREATE TABLE IF NOT EXISTS doctors (
  id           BIGINT PRIMARY KEY,            -- equals users.id (opsiyonel FK)
  department_id BIGINT NOT NULL,
  license_no   VARCHAR(64) NOT NULL UNIQUE,
  bio          VARCHAR(512),
  is_active    BOOLEAN DEFAULT TRUE,
  FOREIGN KEY (department_id) REFERENCES departments(id)
);

CREATE TABLE IF NOT EXISTS patients (
  id           BIGINT PRIMARY KEY,            -- equals users.id (opsiyonel FK)
  insurance_no VARCHAR(64),
  notes        VARCHAR(512)
);

-- TIME SLOTS (doktor müsaitlik)
CREATE TABLE IF NOT EXISTS slots (
  id           BIGINT AUTO_INCREMENT PRIMARY KEY,
  doctor_id    BIGINT NOT NULL,
  start_ts     TIMESTAMP NOT NULL,
  end_ts       TIMESTAMP NOT NULL,
  is_booked    BOOLEAN DEFAULT FALSE,
  version      INT DEFAULT 0,                 -- optimistic lock
  UNIQUE (doctor_id, start_ts, end_ts),
  FOREIGN KEY (doctor_id) REFERENCES doctors(id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS idx_slots_doc_time ON slots(doctor_id, start_ts);

-- APPOINTMENTS
CREATE TABLE IF NOT EXISTS appointments (
  id           BIGINT AUTO_INCREMENT PRIMARY KEY,
  patient_id   BIGINT NOT NULL,
  doctor_id    BIGINT NOT NULL,
  slot_id      BIGINT,                         -- nullable: ad-hoc randevu için
  start_ts     TIMESTAMP NOT NULL,
  end_ts       TIMESTAMP NOT NULL,
  status       VARCHAR(20) NOT NULL,           -- PENDING/CONFIRMED/...
  notes        VARCHAR(512),
  created_at   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (patient_id) REFERENCES patients(id),
  FOREIGN KEY (doctor_id) REFERENCES doctors(id),
  FOREIGN KEY (slot_id) REFERENCES slots(id)
);
CREATE INDEX IF NOT EXISTS idx_appt_doc_time ON appointments(doctor_id, start_ts);
CREATE INDEX IF NOT EXISTS idx_appt_pat_time ON appointments(patient_id, start_ts);

-- TOKENS (session/refresh)
CREATE TABLE IF NOT EXISTS tokens (
  id           BIGINT AUTO_INCREMENT PRIMARY KEY,
  user_id      BIGINT NOT NULL,
  token        VARCHAR(256) NOT NULL UNIQUE,
  expires_at   TIMESTAMP NOT NULL,
  created_at   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);
