



### System config(Genel Ayarlar) #####################################################
######################################################################################
### PORT /NAME #######################################################################
# Port
# http://localhost:4444
# 65536 port(geçit,kapı)
# 0     <= PORT <= 1023  Private  80: proje kapısı, 23: SSH, 443: SSL Reverse Proxy:  4444:80
# 1024  <= PORT <= 49151 Registered, Mysql: 3306, Postgresql: 5432, Mongodb:27017
# 49152 <= PORT <= 65535
server.port=4444
spring.application.name=AcademyClup_Turkcell_EffectiveJava


######################################################################################
### WINDOWS PORT KAPAT ###############################################################
# Windows Port Kapatmak (Power Shell Terminalde Aç)
# netstat -aon | findstr :4444  => Buradan Gelen [EN SAĞDAKI PID]
# taskkill /PID [EN SAĞDAKI PID] /F
# taskkill /PID 8564 /F


######################################################################################
######################################################################################
### LOGLAMA  #########################################################################
######################################################################################
### Log ##############################################################################
# Loglama Asenkron
# sabit bir yerde saklamaliyiz.
logging.file.name=./log/blog.log
# spring hatalari almak icin
# logging.level.org.springframework=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR
# logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
# Gunluk dosyasinin konumunu yapilandirir.
# logging.file.path=./
# logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
# Log LEVEL (7)
# O F E W I D T
# OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE
logging.level.root=INFO


######################################################################################
### Profiles #########################################################################
# Development (Geliştirme): Geliştirme Ortamı için kullanmak ve Gerçek olmayan kullanıcı bilgileri
# Production  (Canlı)     : Üretim ortamı içindir. Gerçek Kullanıcıların bilgileri
# Test        (Testing)   : Test ortamı için, Test için gerekli configuration içindir

# MYSQL (Development)
# PORT: 1111
# Hangi profili aktifleştirmek istiyorsak onu açıyoruz
#spring.profiles.active=dev
# mvn spring-boot:run -Dspring.profiles.active=dev

# POSTGRESQL (Production)
# PORT: 2222
# Hangi profili aktifleştirmek istiyorsak onu açıyoruz
# spring.profiles.active=prod
# mvn spring-boot:run -Dspring.profiles.active=prod

# H2DB (Test)
# PORT: 3333
# Hangi profili aktifleştirmek istiyorsak onu açıyoruz
# spring.profiles.active=test
# mvn spring-boot:run -Dspring.profiles.active=test


######################################################################################
######################################################################################
### DATABASE  ########################################################################
######################################################################################
# H2 Console'u aç
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
# (uzaktan erişim gerekiyorsa)
# spring.h2.console.settings.web-allow-others=true

# DataSource - H2 (in-memory örnek)
# spring.datasource.url=jdbc:h2:mem:hospital;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.url=jdbc:h2:file:./database_memory_persist/blog
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# JPA/Hibernate (opsiyonel ama pratik)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
