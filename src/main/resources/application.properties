
### System config(Genel Ayarlar) #####################################################
######################################################################################
### PORT /NAME #######################################################################
# Port
# http://localhost:4444
# 65536 port(geçit,kapı)
# 0     <= PORT <= 1023  Private  80: proje kapısı, 23: SSH, 443: SSL Reverse Proxy:  4444:80
# 1024  <= PORT <= 49151 Registered, Mysql: 3306, Postgresql: 5432, Mongodb:27017
# 49152 <= PORT <= 65535
server.port=4444
spring.application.name=AcademyClup_Turkcell_EffectiveJava

######################################################################################
### WINDOWS PORT KAPAT ###############################################################
# Windows Port Kapatmak (Power Shell Terminalde Aç)
# netstat -aon | findstr :4444  => Buradan Gelen [EN SAĞDAKI PID]
# taskkill /PID [EN SAĞDAKI PID] /F
# taskkill /PID 8564 /F

######################################################################################
######################################################################################
### LOGLAMA  #########################################################################
######################################################################################
### Log ##############################################################################
# Loglama Asenkron
# sabit bir yerde saklamaliyiz.
logging.file.name=./log/hospital.log
# spring hatalari almak icin
# logging.level.org.springframework=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR
# logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
# Gunluk dosyasinin konumunu yapilandirir.
# logging.file.path=./
# logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
# Log LEVEL (7)
# O F E W I D T
# OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE
logging.level.root=INFO

######################################################################################
### Profiles #########################################################################
# Development (Geliştirme): Geliştirme Ortamı için kullanmak ve Gerçek olmayan kullanıcı bilgileri
# Production  (Canlı)     : Üretim ortamı içindir. Gerçek Kullanıcıların bilgileri
# Test        (Testing)   : Test ortamı için, Test için gerekli configuration içindir

# MYSQL (Development)
# PORT: 1111
# Hangi profili aktifleştirmek istiyorsak onu açıyoruz
#spring.profiles.active=dev
# mvn spring-boot:run -Dspring.profiles.active=dev

# POSTGRESQL (Production)
# PORT: 2222
# Hangi profili aktifleştirmek istiyorsak onu açıyoruz
# spring.profiles.active=prod
# mvn spring-boot:run -Dspring.profiles.active=prod

# H2DB (Test)
# PORT: 3333
# Hangi profili aktifleştirmek istiyorsak onu açıyoruz
# spring.profiles.active=test
# mvn spring-boot:run -Dspring.profiles.active=test

######################################################################################
######################################################################################
### DATABASE  ########################################################################
######################################################################################

#spring.h2.console.settings.web-allow-others=true
#security.basic.enabled=true
# spring.datasource.url=jdbc:h2:file:./memory_persist/hospital;useSSL=falseDB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE

# DB helper da aynı URL’yi görsün (DB.defaultUrl -> System.getProperty)
app.db.url=${spring.datasource.url}

# ---- H2 Console ve port ----
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# ---- H2 JDBC URL (İSTENEN) ----
spring.datasource.driver-class-name=org.h2.Driver
# persist data : AUTO_SERVER=FALSE olursa sadece bir yerde database erişim sağlanır.
# spring.datasource.url=jdbc:h2:mem:denemedb  ==> sadece cache bellekte çalışacaktır
spring.datasource.url=jdbc:h2:file:./database_memory_persist/hospital;AUTO_SERVER=TRUE
spring.datasource.username=sa
spring.datasource.password=

spring.jpa.hibernate.ddl-auto=none
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true

# Dikkat Test için H2-DB
# URL: jdbc:h2:file:~/hospital_clean_db
# USER: sa
# PASS:

# Terminal
# mvn -Pboot spring-boot:run

# Test (sadece bu metot):
# mvn -Dtest=H2ConsoleAuthFlowTest#ensureUserAndLogin test

# mvn -Pboot spring-boot:run
# sonra tarayıcı: http://localhost:4444/h2-console/
# JDBC URL: jdbc:h2:file:~/hospital_clean_db;AUTO_SERVER=TRUE  (user: sa, password: boş)


# mvn -Dapp.db.url="jdbc:h2:file:./database_memory_persist/hospital;AUTO_SERVER=TRUE" \
#    -Dtest=H2ConsoleAuthFlowTest#ensureUserAndLogin test



######################################################################################
### MYSQL DB #########################################################################
##CREATE SCHEMA `blog` DEFAULT CHARACTER SET utf8 COLLATE utf8_turkish_ci ;
## use blog;
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/blog?createDatabaseIfNotExist=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=rootroot

######################################################################################
### POSTGRESQL  ######################################################################
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.datasource.url=jdbc:postgresql://localhost:5432/blog
#spring.datasource.username=postgres
#spring.datasource.password=rootroot
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

######################################################################################
### ORACLE ###########################################################################
# spring.datasource.url=jdbc:oracle:thin:@localhost:1521:orcl
# spring.datasource.username=system
# spring.datasource.password=Password123

######################################################################################
######################################################################################
######################################################################################
### Non-Relation Database ############################################################

######################################################################################
### MONGO DB #########################################################################
## Robo 3T
##  @SpringBootApplication icinde bunu yaz ==> @EnableMongoRepositories
##  @Repository ==> public interface IDeneme extends MongoRepository<EntityName,Long>{}
# spring.data.mongodb.database=mongodb
# spring.data.mongodb.uri=mongodb://localhost:27017