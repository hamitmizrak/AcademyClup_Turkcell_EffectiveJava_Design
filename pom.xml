<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.3</version>
        <relativePath/>
    </parent>

    <groupId>com.hamitmizrak</groupId>
    <artifactId>effectivejava</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <!-- Proje Lisansı -->
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!-- Geliştirici Bilgileri -->
    <developers>
        <developer>
            <id>hamitmizrak</id>
            <name>Hamit Mızrak</name>
            <email>hamitmizrak@gmail.com</email>
            <url>https://github.com/HamitMizrak</url>
            <roles>
                <role>lead developer</role>
                <role>architect</role>
            </roles>
            <timezone>+3</timezone>
        </developer>
    </developers>

    <!-- Versiyon Kontrol Sistemi (SCM) -->
    <scm>
        <connection>scm:git:https://github.com/</connection>
        <developerConnection>scm:git:ssh://github.com/</developerConnection>
        <url>https://github.com/HamitMizrak/</url>
        <tag>main</tag>
    </scm>

    <properties>
        <encoding>UTF-8</encoding>
        <java.version>21</java.version>

        <!-- Maven -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Jenkins - SonarQube - Maven -->
        <maven.compiler.release>21</maven.compiler.release>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>

        <!-- Kütüphane versiyonları -->
        <model.mapper.version>2.4.4</model.mapper.version>
        <gson.version>2.8.6</gson.version>
        <swagger.version>2.6.0</swagger.version>

        <!-- Test -->
        <junit.jupiter.version>5.10.2</junit.jupiter.version>
        <maven.surefire.plugin.version>3.2.5</maven.surefire.plugin.version>
        <maven.exec.plugin.version>3.1.0</maven.exec.plugin.version>
    </properties>

    <dependencies>
        <!-- Spring Web / JPA / Actuator (mevcutta kalsın; CLI kodu bunlara bağlı değil) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- ModelMapper -->
        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>${model.mapper.version}</version>
        </dependency>

        <!-- H2 (runtime + test) -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>

        <!-- ===== Test Dependencies (JUnit 5) ===== -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- (İsterseniz AssertJ, Mockito vb. ekleyebiliriz) -->
    </dependencies>

    <build>
        <!-- Konsol projeleri için defaultGoal'i 'package' yapalım. -->
        <defaultGoal>package</defaultGoal>
        <finalName>${project.artifactId}</finalName>

        <plugins>
            <!-- Derleyici -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <release>${maven.compiler.release}</release>
                </configuration>
            </plugin>

            <!-- JUnit 5 için Surefire -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <configuration>
                    <useModulePath>false</useModulePath>
                </configuration>
            </plugin>

            <!-- CLI çalıştırmak için (MainConsole) -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${maven.exec.plugin.version}</version>
                <executions>
                    <execution>
                        <id>run-cli</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.hamitmizrak.good.MainConsole</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Spring Boot plugin (ileride web app çalıştırmak isterseniz kullanın) -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!-- CLI için gerekli değil; web uygulamasını paketlemek/çalıştırmak için duruyor -->
                <configuration>
                    <!-- Eğer bir Spring Boot main'iniz varsa burada belirtin -->
                    <mainClass>com.hamitmizrak.EffectivejavaApplication</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- İsteğe bağlı: CLI ve Boot için ayrı profiller
         mvn -Pcli exec:java    veya    mvn -Pboot spring-boot:run -->
    <profiles>
        <profile>
            <id>cli</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- CLI varsayılan aktif -->
            </properties>
        </profile>
        <profile>
            <id>boot</id>
            <properties/>
        </profile>
    </profiles>
</project>
